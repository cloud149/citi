var liveRampTimeout = 700;


// PIXEL CALL -- START
function setLiveRampPixel() {
	new Promise((resolve) => {
		var cuuid = getCUUID();
		var liverampPixelUrl = 'https://idsync.rlcdn.com/501099.gif?partner_uid=' + cuuid;
		var liverampPixelImage = document.createElement("img");
		liverampPixelImage.src = liverampPixelUrl;

		liverampPixelImage.addEventListener('load', function () {
			resolve(liverampPixelImage);
		});
		// Handle call error
		liverampPixelImage.addEventListener('error', function () {
			resolve(null);
		});
		liverampPixelImage.addEventListener('abort', function () {
			resolve(null);
		});
		// Handle call timeout
		setTimeout(function () {
			resolve(null);
		}, liveRampTimeout);

	}).then((liverampPixelImg) => {		
		if (!liverampPixelImg) 	console.log('Pixel load timed out. Triggering the idl api call');
		liveRampAPI();
		return;
	})
}
function getCUUID() {
	var cuuid = getCookie('CUUID');
	if (!cuuid) {
		var DATE = new Date();
		DATE.setTime(DATE.getTime() + (3600 * 1000 * 24 * 365));
		cuuid = uuidv4();
		document.cookie = "CUUID=" + cuuid + "; expires=" + DATE.toUTCString() + "; path=/;" + "domain=.citi.com"; //TODO add "secure" attribute
	}
	return cuuid;
}

function getCookie(cname) {
	var name = cname + "=";
	var decodedCookie = decodeURIComponent(document.cookie);
	var ca = decodedCookie.split(';');
	for (var i = 0; i < ca.length; i++) {
		var c = ca[i];
		while (c.charAt(0) == ' ') {
			c = c.substring(1);
		}
		if (c.indexOf(name) == 0) {
			return c.substring(name.length, c.length);
		}
	}
	return "";
}

function uuidv4() {
	var options = {};
	var rnds = rng(); //define rng
	// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
	rnds[6] = (rnds[6] & 0x0f) | 0x40;
	rnds[8] = (rnds[8] & 0x3f) | 0x80;

	return bytesToUuid(rnds);
}

function rng() {
	var getRandomValues = (typeof (crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||
		(typeof (msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));

	if (getRandomValues) {
		// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
		var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef
		getRandomValues(rnds8);
		return rnds8;
	} else {
		// Math.random()-based (RNG)
		//
		// If all else fails, use Math.random().  It's fast, but is of unspecified
		// quality.
		var rnds = new Array(16);

		for (var i = 0, r; i < 16; i++) {
			if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
			rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
		}
		return rnds;
	}
}

function bytesToUuid(buf) {
	var byteToHex = [];
	for (var i = 0; i < 256; ++i) {
		byteToHex[i] = (i + 0x100).toString(16).substr(1);
	}
	var i = 0;
	var bth = byteToHex;
	// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4
	return ([
		bth[buf[i++]], bth[buf[i++]],
		bth[buf[i++]], bth[buf[i++]], '-',
		bth[buf[i++]], bth[buf[i++]], '-',
		bth[buf[i++]], bth[buf[i++]], '-',
		bth[buf[i++]], bth[buf[i++]], '-',
		bth[buf[i++]], bth[buf[i++]],
		bth[buf[i++]], bth[buf[i++]],
		bth[buf[i++]], bth[buf[i++]]
	]).join('');
}
// PIXEL CALL -- END


// LIVERAMP CALL -- START
function liveRampAPI() {
	var liveRampUrl = "https://api.rlcdn.com/api/identity?pid=1&rt=idl";

	var xmlHttp = new XMLHttpRequest();

	xmlHttp.withCredentials = true;

	// Makes the http GET call asynchronous
	xmlHttp.open("GET", liveRampUrl, true);

	// Set timeout for async call
	if (+liveRampTimeout) {
		xmlHttp.timeout = +liveRampTimeout;
	}

	var start_time = new Date().getTime();

	xmlHttp.onload = function () { //request finished
		if (xmlHttp.readyState === xmlHttp.DONE) {
			if (xmlHttp.status === 200) {
				console.log("Live ramp call success");

				var DATE = new Date();
				DATE.setTime(DATE.getTime() + (3600 * 1000 * 24 * 365));
				var liveRampResp_Time = new Date().getTime() - start_time;
				liveRampResp = JSON.parse(xmlHttp.response).idl;
				window.global_liveRampResponse.idlRespons = liveRampResp;
				window.global_liveRampResponse.callStatus = '1';
				window.global_liveRampResponse.liveRamp_time = liveRampResp_Time;
				document.cookie = "liveRamp=" + liveRampResp + "; expires=" + DATE.toUTCString() + "; path=/;" + "domain=.citi.com"; //TODO add "secure" attribute

				return xmlHttp.response
			}
		}
	};

	xmlHttp.ontimeout = function (e) { //request timedout
		var liveRampResp_Time = new Date().getTime() - start_time;
		window.global_liveRampResponse.callStatus = '0';
		window.global_liveRampResponse.liveRamp_time = liveRampResp_Time;

		return -1;
	};

	xmlHttp.onerror = function (e) { //failing in both local scenarios
		var liveRampResp_Time = new Date().getTime() - start_time;
		window.global_liveRampResponse.callStatus = '0';
		window.global_liveRampResponse.liveRamp_time = liveRampResp_Time;

		return -1;
	}

	xmlHttp.send(null);
}
// LIVERAMP CALL -- END

// Start Sequence
setLiveRampPixel();